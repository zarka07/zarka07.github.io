{"version":3,"file":"js/project2.422dada0.js","mappings":"qeAyEA,MAAMA,GAASC,EAAAA,EAAAA,KACTC,GAAYC,EAAAA,EAAAA,KACZC,GAAQC,EAAAA,EAAAA,KACRC,EAAU,GAChB,IAAIC,EAAO,QACPC,GAAQC,EAAAA,EAAAA,IAAI,IACZC,GAAQC,EAAAA,EAAAA,IAAS,IAmBrB,SAASC,IACP,IAAIC,EAAgBC,KAAKC,KAAKP,EAAMQ,MAAMC,OAASX,GACnD,IAAK,IAAIY,EAAQ,EAAGA,GAASL,EAAeK,IAC1CR,EAAMS,KAAKD,GAEb,OAAOR,GAvBTU,EAAAA,EAAAA,KAAcC,UACZrB,EAAOsB,aACP,IAAIC,EAAK,KAUT,GATAf,EAAMQ,YAAcQ,IAAAA,IACbC,wCAAyClB,EAAMgB,GACnDG,MAAMC,GAAqB,OAAPJ,EAAcA,EAAGI,EAASC,MAAQD,EAASC,OAC/DC,OAAOC,IACN1B,EAAM2B,UAAUD,MAEjBE,SAAQ,KACPhC,EAAOiC,iBAERzB,EAAMQ,MAGP,OAAO,EAFPJ,OAYJ,IAAIsB,GAAiBC,EAAAA,EAAAA,KAAS,IACrBC,EAAS5B,EAAMQ,SAExB,SAASoB,EAASpB,GACd,IAAIqB,EAAOnC,EAAUoC,YACjBC,EAAOF,EAAO/B,EAAUA,EACxBkC,EAAKH,EAAO/B,EAChB,OAAOU,EAAMyB,MAAMF,EAAMC,G,u3CC1G7B,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,uiBCuCA,IAAI,OAAEC,IAAWC,EAAAA,EAAAA,MACjB,MAAMC,EAAUpB,QAA0CqB,MAAM,KAC1D1C,GAAQC,EAAAA,EAAAA,KACd,SAAS0C,EAAWC,GACdL,EAAO3B,QAAUgC,IACnBL,EAAO3B,MAAQgC,G,4lBC9CnB,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,S,mECNO,MAAM3C,GAAa4C,EAAAA,EAAAA,IAAY,QAAS,CAC3CC,MAAO,KACI,CACHC,SAAS,EACTC,WAAY,OAGpBC,QAAS,CACLtB,UAAUqB,GACNE,KAAKF,WAAaA,EAClBE,KAAKH,SAAU,O,mECV3B,IAAII,EAAYC,aAAaC,QAAQ,iBACjCC,EAAiBF,aAAaC,QAAQ,kBAEnC,MAAMtD,GAAY8C,EAAAA,EAAAA,IAAY,OAAQ,CACzCC,MAAO,KACI,CACHS,SAAS,CACLC,SAAS,GACTC,MAAM,GACNC,SAAS,GACTC,OAAO,IAEXzB,YAAa,EACbiB,UAAWA,EAAYS,KAAKC,MAAMV,GAAa,GAC/CG,eAAgBA,EAAiBM,KAAKC,MAAMP,GAAkB,IAGtEQ,QAAS,CACLC,oBAAoBjB,GAChB,OAAOA,EAAMQ,iBAGrBL,QAAS,CACLe,UAAUC,GACFA,IACAf,KAAKC,UAAUpC,KAAKkD,GACpBf,KAAKI,iBACLF,aAAac,QAAQ,gBAAiBN,KAAKO,UAAUjB,KAAKC,YAC1DC,aAAac,QAAQ,iBAAkBN,KAAKO,UAAUjB,KAAKI,mBAGnEc,YACIlB,KAAKC,UAAY,GACjBD,KAAKI,eAAiB,EACtBF,aAAaiB,WAAW,iBACxBjB,aAAaiB,WAAW,mBAE5BC,YACIpB,KAAKK,SAAW","sources":["webpack://vue3/./src/components/Project2/PostList.vue","webpack://vue3/./src/components/Project2/PostList.vue?02fd","webpack://vue3/./src/views/Project2.vue","webpack://vue3/./src/views/Project2.vue?28ac","webpack://vue3/./src/stores/ErrorStore.js","webpack://vue3/./src/stores/UserStore.js"],"sourcesContent":["<template>\r\n  <div class=\"postlist p-2\">\r\n    <!-- postlist -->\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <div class=\"posts\">\r\n            <h3>{{ $t(\"PostlistVue.Postlist\") }}</h3>\r\n          </div>\r\n          <ul class=\"post\" v-if=\"posts\">\r\n            <li v-for=\"post in displayedPosts\" :key=\"post.id\">\r\n              <router-link\r\n                :to=\"{\r\n                  name: 'PostId',\r\n                  params: { id: post.id, currentPage: userStore.currentPage },\r\n                }\"\r\n              >\r\n                {{ post.id }}. {{ post.title }}\r\n              </router-link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- pagination -->\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ul class=\"pagination\">\r\n        <li class=\"page-item\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"page-link\"\r\n            style=\"color: #4caf50\"\r\n            v-if=\"userStore.currentPage != 1\"\r\n            @click=\"userStore.currentPage--\"\r\n          >\r\n            {{ $t(\"PostlistVue.Previous\") }}\r\n          </button>\r\n        </li>\r\n        <li class=\"page-item\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"page-link\"\r\n            v-for=\"pageNumber in pages.slice(\r\n              userStore.currentPage - 1,\r\n              userStore.currentPage + 5\r\n            )\"\r\n            :key=\"pageNumber\"\r\n            @click=\"userStore.currentPage = pageNumber\"\r\n          >\r\n            {{ pageNumber }}\r\n          </button>\r\n        </li>\r\n        <li class=\"page-item\">\r\n          <button\r\n            type=\"button\"\r\n            @click=\"userStore.currentPage++\"\r\n            style=\"color: #4caf50\"\r\n            v-if=\"userStore.currentPage < pages.length\"\r\n            class=\"page-link\"\r\n          >\r\n            {{ $t(\"PostlistVue.Next\") }}\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { UserStore } from \"@/stores/UserStore\";\r\nimport { ErrorStore } from \"@/stores/ErrorStore\";\r\nimport { ref, reactive, computed, onBeforeMount } from \"vue\";\r\nimport { LoaderStore } from \"@/stores/LoaderStore\";\r\nimport axios from \"axios\";\r\nconst loader = LoaderStore();\r\nconst userStore = UserStore();\r\nconst error = ErrorStore();\r\nconst perPage = 10;\r\nlet path = \"posts\";\r\nlet posts = ref([]);\r\nlet pages = reactive([]);\r\nonBeforeMount(async () => {\r\n  loader.showLoader()\r\n  let cb = null\r\n  posts.value = await axios\r\n    .get(process.env.VUE_APP_API_P2ENDPOINT_URL + path, cb)\r\n    .then((response) => (cb !== null ? cb(response.data) : response.data))\r\n    .catch((err) => {\r\n      error.showError(err)      \r\n    })\r\n    .finally(() => {\r\n      loader.hideLoader();\r\n    });\r\n  if(posts.value){\r\n    setPages()\r\n  }else{\r\n    return 0\r\n  }\r\n});\r\nfunction setPages() {\r\n  let numberOfPages = Math.ceil(posts.value.length / perPage);\r\n  for (let index = 1; index <= numberOfPages; index++) {\r\n    pages.push(index);\r\n  }\r\n  return pages;\r\n}\r\nlet displayedPosts = computed(() => {\r\n  return paginate(posts.value);\r\n})\r\nfunction paginate(value) {\r\n    let page = userStore.currentPage;\r\n    let from = page * perPage - perPage;\r\n    let to = page * perPage;\r\n    return value.slice(from, to);\r\n}\r\n// filters: {\r\n//   trimWords(value) {\r\n//     return value.split(\" \").splice(0, 20).join(\" \") + \"...\";\r\n//   },\r\n// },\r\n</script>\r\n<style scoped>\r\n.post {\r\n  margin-left: 2em;\r\n  list-style: none;\r\n}\r\n\r\nh3 {\r\n  text-align: center;\r\n  color: black;\r\n}\r\n\r\nspan {\r\n  margin: 15px;\r\n}\r\n\r\n.modal {\r\n  display: block;\r\n  height: 500px;\r\n  width: 80%;\r\n}\r\n\r\na {\r\n  color: black;\r\n}\r\n\r\nbutton.page-link {\r\n  display: inline-block;\r\n}\r\n\r\nbutton.page-link {\r\n  font-size: 15px;\r\n  color: #0b34caba;\r\n  font-weight: 500;\r\n  padding: 0.2rem 0.5rem;\r\n  border: 1px dotted;\r\n  border-radius: 2px;\r\n}\r\n\r\n.offset {\r\n  width: 500px !important;\r\n  margin: 20px auto;\r\n}\r\n\r\n.pagination {\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-left: 0;\r\n}\r\n</style>\r\n","import script from \"./PostList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PostList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PostList.vue?vue&type=style&index=0&id=7262d2dc&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Projects\\\\vue3\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7262d2dc\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <div v-if=\"error.isError\" class=\"alert alert-danger align-items-center\" role=\"alert\">\r\n      <div style=\"text-align: center\">\r\n        {{ error.statusCode }}\r\n      </div>\r\n    </div>\r\n    <Header />\r\n\r\n    <div class=\"\" style=\"min-height: 77vh\">\r\n      <div class=\"Header row\" style=\"margin: 0\">\r\n        <div class=\"title col-xs-12 col-sm-6 col-md-6\">\r\n          <h2>{{ $t(\"AppVue.Vue\") }}</h2>\r\n        </div>\r\n\r\n        <div class=\"dropdown col-xs-12 col-sm-6 col-md-6\">\r\n          <button\r\n            class=\"btn dropdown-toggle\"\r\n            type=\"button\"\r\n            id=\"dropdownMenuButton1\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            {{ $t(\"AppVue.Language\") }}\r\n          </button>\r\n          <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n            <li v-for=\"_locale in locales\" :key=\"_locale\" @click=\"changeLang(_locale)\">\r\n              <a class=\"dropdown-item\" href=\"#\">\r\n                {{ $t(\"AppVue.Language\") }}: {{ _locale }}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <PostList />\r\n    </div>\r\n\r\n    <Footer />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport Header from \"@/components/Header.vue\";\r\nimport Footer from \"@/components/Footer.vue\";\r\nimport PostList from \"@/components/Project2/PostList.vue\";\r\nimport { ErrorStore } from \"@/stores/ErrorStore\";\r\nimport { useI18n } from \"vue-i18n\";\r\nlet { locale } = useI18n();\r\nconst locales = process.env.VUE_APP_I18N_SUPPORTED_LOCALE.split(\",\");\r\nconst error = ErrorStore();\r\nfunction changeLang(_locale) {\r\n  if (locale.value !== _locale) {\r\n    locale.value = _locale;\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.Header {\r\n  /* background-image:url('../assets/header-background.jpg'); */\r\n  background-image: url(\"https://cdn.vuetifyjs.com/images/backgrounds/vbanner.jpg\");\r\n  height: 13vh;\r\n  width: 100vw;\r\n  align-content: center;\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  color: #ffc107;\r\n}\r\n\r\n.dropdown {\r\n  text-align: center;\r\n}\r\n\r\n.btn {\r\n  background-color: #ffc107;\r\n  text-align: center;\r\n}\r\n\r\n.dropdown-menu {\r\n  min-width: 5rem;\r\n  text-align: center;\r\n  background-color: rgb(186, 234, 218);\r\n}\r\n\r\n.btn .dropdown-toggle {\r\n  z-index: 0;\r\n}\r\n</style>\r\n","import script from \"./Project2.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Project2.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Project2.vue?vue&type=style&index=0&id=2e04bf0e&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Projects\\\\vue3\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2e04bf0e\"]])\n\nexport default __exports__","import { defineStore } from 'pinia';\r\n\r\nexport const ErrorStore = defineStore('error', {\r\n    state: () => {\r\n        return {\r\n            isError: false,\r\n            statusCode: null,\r\n        }\r\n    },\r\n    actions: {\r\n        showError(statusCode) {\r\n            this.statusCode = statusCode,\r\n            this.isError = true\r\n        },\r\n    }\r\n})","import { defineStore } from 'pinia';\r\n\r\nlet cartItems = localStorage.getItem('products-list');\r\nlet cartItemsCount = localStorage.getItem('products-count');\r\n\r\nexport const UserStore = defineStore('auth', {\r\n    state: () => {\r\n        return {\r\n            userInfo:{\r\n                username:'',\r\n                email:'',\r\n                password:'',\r\n                avatar:''\r\n            },\r\n            currentPage: 1,\r\n            cartItems: cartItems ? JSON.parse(cartItems) : [],\r\n            cartItemsCount: cartItemsCount ? JSON.parse(cartItemsCount) : 0,\r\n        }\r\n    },\r\n    getters: {\r\n        CURRENT_ITEMS_COUNT(state) {\r\n            return state.cartItemsCount\r\n        }\r\n    },\r\n    actions: {\r\n        addToCart(id) {\r\n            if (id) {\r\n                this.cartItems.push(id);\r\n                this.cartItemsCount++;\r\n                localStorage.setItem(\"products-list\", JSON.stringify(this.cartItems))\r\n                localStorage.setItem(\"products-count\", JSON.stringify(this.cartItemsCount))\r\n            }\r\n        },\r\n        resetCart() {\r\n            this.cartItems = [];\r\n            this.cartItemsCount = 0;\r\n            localStorage.removeItem(\"products-list\");\r\n            localStorage.removeItem(\"products-count\");\r\n        },\r\n        resetUser() {\r\n            this.userInfo = {}\r\n        },\r\n        // addUser(formData) {\r\n        //     this.username = formData.username,\r\n        //         this.email = formData.email,\r\n        //         this.password = formData.password\r\n        // },\r\n        // signIn(formData) {\r\n        //     this.email = formData.email,\r\n        //         this.password = formData.password\r\n        // },\r\n    }\r\n})"],"names":["loader","LoaderStore","userStore","UserStore","error","ErrorStore","perPage","path","posts","ref","pages","reactive","setPages","numberOfPages","Math","ceil","value","length","index","push","onBeforeMount","async","showLoader","cb","axios","process","then","response","data","catch","err","showError","finally","hideLoader","displayedPosts","computed","paginate","page","currentPage","from","to","slice","__exports__","locale","useI18n","locales","split","changeLang","_locale","defineStore","state","isError","statusCode","actions","this","cartItems","localStorage","getItem","cartItemsCount","userInfo","username","email","password","avatar","JSON","parse","getters","CURRENT_ITEMS_COUNT","addToCart","id","setItem","stringify","resetCart","removeItem","resetUser"],"sourceRoot":""}